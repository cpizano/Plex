Plex Dump Version 001
token count: 32
   0:[SOS]
   1:   1 {  8}  // test_007, part of the plex test suite.
<+insert> count: 153
   0:   1 {172} <ctrl>
   1:   2 {164}  #include <windows.h>
   2:   2 {172} <ctrl>
   3:   4 {  8}  ///////////////////////////////////////////////////////////////////////////////
   4:   5 {  8}  // plx::Exception
   5:   6 {  8}  // line_ : The line of code, usually __LINE__.
   6:   7 {  8}  // message_ : Whatever useful text.
   7:   8 {112}  namespace
   8:   8 {  6} __________ plx
   9:   8 { 41} ______________ {
  10:   9 { 84}  class
  11:   9 {  6} ______ Exception
  12:   9 { 41} ________________ {
  13:  10 {109} __ int
  14:  10 {  6} ______ line_
  15:  10 { 30} ___________ ;
  16:  11 { 86} __ const
  17:  11 { 81} ________ char
  18:  11 { 23} ____________ *
  19:  11 {  6} ______________ message_
  20:  11 { 30} ______________________ ;
  21:  13 {123}  protected
  22:  13 { 29} _________ :
  23:  14 {149} __ void
  24:  14 {  6} _______ PostCtor
  25:  14 { 21} _______________ (
  26:  14 { 22} ________________ )
  27:  14 { 41} __________________ {
  28:  15 {107} ____ if
  29:  15 { 21} _______ (
  30:  15 {  6} ________ ::IsDebuggerPresent
  31:  15 { 21} ___________________________ (
  32:  15 { 22} ____________________________ )
  33:  15 { 22} _____________________________ )
  34:  15 { 41} _______________________________ {
  35:  16 {  6} ______ __debugbreak
  36:  16 { 21} __________________ (
  37:  16 { 22} ___________________ )
  38:  16 { 30} ____________________ ;
  39:  17 { 43} ____ }
  40:  18 { 43} __ }
  41:  20 {124}  public
  42:  20 { 29} ______ :
  43:  21 {  6} __ Exception
  44:  21 { 21} ___________ (
  45:  21 {109} ____________ int
  46:  21 {  6} ________________ line
  47:  21 { 25} ____________________ ,
  48:  21 { 86} ______________________ const
  49:  21 { 81} ____________________________ char
  50:  21 { 23} ________________________________ *
  51:  21 {  6} __________________________________ message
  52:  21 { 22} _________________________________________ )
  53:  21 { 29} ___________________________________________ :
  54:  21 {  6} _____________________________________________ line_
  55:  21 { 21} __________________________________________________ (
  56:  21 {  6} ___________________________________________________ line
  57:  21 { 22} _______________________________________________________ )
  58:  21 { 25} ________________________________________________________ ,
  59:  21 {  6} __________________________________________________________ message_
  60:  21 { 21} __________________________________________________________________ (
  61:  21 {  6} ___________________________________________________________________ message
  62:  21 { 22} __________________________________________________________________________ )
  63:  21 { 41} ____________________________________________________________________________ {
  64:  21 { 43} _____________________________________________________________________________ }
  65:  22 {148} __ virtual
  66:  22 { 44} __________ ~
  67:  22 {  6} ___________ Exception
  68:  22 { 21} ____________________ (
  69:  22 { 22} _____________________ )
  70:  22 { 41} _______________________ {
  71:  22 { 43} ________________________ }
  72:  23 { 86} __ const
  73:  23 { 81} ________ char
  74:  23 { 23} ____________ *
  75:  23 {  6} ______________ Message
  76:  23 { 21} _____________________ (
  77:  23 { 22} ______________________ )
  78:  23 { 86} ________________________ const
  79:  23 { 41} ______________________________ {
  80:  23 {127} ________________________________ return
  81:  23 {  6} _______________________________________ message_
  82:  23 { 30} _______________________________________________ ;
  83:  23 { 43} _________________________________________________ }
  84:  24 {109} __ int
  85:  24 {  6} ______ Line
  86:  24 { 21} __________ (
  87:  24 { 22} ___________ )
  88:  24 { 86} _____________ const
  89:  24 { 41} ___________________ {
  90:  24 {127} _____________________ return
  91:  24 {  6} ____________________________ line_
  92:  24 { 30} _________________________________ ;
  93:  24 { 43} ___________________________________ }
  94:  25 { 43}  }
  95:  25 { 30} _ ;
  96:  26 { 43}  }
  97:  26 {172} <ctrl>
  98:  28 {  8}  ///////////////////////////////////////////////////////////////////////////////
  99:  29 {  8}  // plx::IOException
 100:  30 {  8}  // error_code_ : The win32 error code of the last operation.
 101:  31 {112}  namespace
 102:  31 {  6} __________ plx
 103:  31 { 41} ______________ {
 104:  32 { 84}  class
 105:  32 {  6} ______ IOException
 106:  32 { 29} __________________ :
 107:  32 {124} ____________________ public
 108:  32 {  6} ___________________________ plx::Exception
 109:  32 { 41} __________________________________________ {
 110:  33 {  6} __ DWORD
 111:  33 {  6} ________ error_code_
 112:  33 { 30} ___________________ ;
 113:  35 {124}  public
 114:  35 { 29} ______ :
 115:  36 {  6} __ IOException
 116:  36 { 21} _____________ (
 117:  36 {109} ______________ int
 118:  36 {  6} __________________ line
 119:  36 { 22} ______________________ )
 120:  37 { 29} ______ :
 121:  37 {  6} ________ Exception
 122:  37 { 21} _________________ (
 123:  37 {  6} __________________ line
 124:  37 { 25} ______________________ ,
 125:  37 {  9} ________________________ "IO problem"
 126:  37 { 22} ____________________________________ )
 127:  37 { 25} _____________________________________ ,
 128:  37 {  6} _______________________________________ error_code_
 129:  37 { 21} __________________________________________________ (
 130:  37 {  6} ___________________________________________________ ::GetLastError
 131:  37 { 21} _________________________________________________________________ (
 132:  37 { 22} __________________________________________________________________ )
 133:  37 { 22} ___________________________________________________________________ )
 134:  37 { 41} _____________________________________________________________________ {
 135:  38 {  6} ____ PostCtor
 136:  38 { 21} ____________ (
 137:  38 { 22} _____________ )
 138:  38 { 30} ______________ ;
 139:  39 { 43} __ }
 140:  40 {  6} __ DWORD
 141:  40 {  6} ________ ErrorCode
 142:  40 { 21} _________________ (
 143:  40 { 22} __________________ )
 144:  40 { 86} ____________________ const
 145:  40 { 41} __________________________ {
 146:  40 {127} ____________________________ return
 147:  40 {  6} ___________________________________ error_code_
 148:  40 { 30} ______________________________________________ ;
 149:  40 { 43} ________________________________________________ }
 150:  41 { 43}  }
 151:  41 { 30} _ ;
 152:  42 { 43}  }
<~insert>
   2:   3 {109}  int
   3:   3 {  6} ____ wmain
   4:   3 { 21} _________ (
   5:   3 {109} __________ int
   6:   3 {  6} ______________ argc
   7:   3 { 25} __________________ ,
   8:   3 {151} ____________________ wchar_t
   9:   3 { 23} ___________________________ *
  10:   3 {  6} _____________________________ argv
  11:   3 { 36} _________________________________ [
  12:   3 { 38} __________________________________ ]
  13:   3 { 22} ___________________________________ )
  14:   3 { 41} _____________________________________ {
  15:   4 {107} __ if
  16:   4 { 21} _____ (
  17:   4 {  6} ______ argc
  18:   4 { 33} ___________ >
  19:   4 {  7} _____________ 3
  20:   4 { 22} ______________ )
  21:   5 {139} ____ throw
  22:   5 {  6} __________ plx::IOException
  23:   5 { 21} __________________________ (
  24:   5 {  5} ___________________________ __LINE__
  25:   5 { 22} ___________________________________ )
  26:   5 { 30} ____________________________________ ;
  27:   7 {127} __ return
  28:   7 {  7} _________ 0
  29:   7 { 30} __________ ;
  30:   8 { 43}  }
  31:[EOS]
